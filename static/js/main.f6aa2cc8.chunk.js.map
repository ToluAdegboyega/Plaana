{"version":3,"sources":["components/TodoForm.js","components/Todo.js","components/TodoList.js","App.js","index.js"],"names":["useStyles","makeStyles","theme","toDoForm","width","toDoInput","padding","borderRadius","border","outline","background","color","fontSize","toDoInputEdit","marginTop","toDoButton","cursor","textTransform","fontWeight","marginLeft","marginBottom","fontFamily","breakpoints","down","marginRight","toDoEditButton","TodoForm","props","classes","useState","edit","value","input","setInput","handleChange","e","target","className","onSubmit","preventDefault","id","Math","floor","random","text","InputBase","type","placeholder","name","onChange","multiline","Button","variant","autoFocus","todoWrap","display","justifyContent","alignItems","margin","deleteIcon","editIcon","Todo","todos","completeTodo","removeTodo","updateTodo","setEdit","map","todo","index","isComplete","key","onClick","icons","typography","textAlign","paper","backgroundColor","TodoList","setTodos","Typography","Paper","elevation","test","newTodos","updatedTodos","removeArr","filter","todoId","newValue","prev","item","container","paddingTop","App","Box","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f6aa2cc8.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\nimport { makeStyles} from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport InputBase from '@material-ui/core/InputBase';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    toDoForm: {\r\n        width: \"100%\",\r\n    },\r\n    toDoInput: {\r\n        padding: '14px',\r\n        borderRadius: '5px',\r\n        border: '2px solid #5d0cff',\r\n        outline: 'none',\r\n        background: 'transparent',\r\n        color: 'grey',\r\n        fontSize: '18px'\r\n      },\r\n      toDoInputEdit: {\r\n        padding: '14px',\r\n        borderRadius: '5px',\r\n        border: '2px solid rgba(44, 130, 201, 1)',\r\n        outline: 'none',\r\n        background: 'transparent',\r\n        color: 'grey',\r\n        fontSize: '18px',\r\n        marginTop: '30px'\r\n      },\r\n    toDoButton: {\r\n        padding: '15px',\r\n        border: 'none',\r\n        borderRadius: '5px',\r\n        cursor: 'pointer',\r\n        outline: 'none',\r\n        background: 'linear-gradient(90deg, rgba(93, 12, 255, 1) 0%, rgba(155, 0, 250, 1) 100% )',\r\n        color: '#fff',\r\n        textTransform: 'uppercase',\r\n        fontWeight: '700',\r\n        marginLeft: '20px',\r\n        marginBottom: '5px',\r\n        fontFamily: 'Segoe UI',\r\n        [theme.breakpoints.down('xs')]: {\r\n            marginTop: '20px',\r\n            marginRight: '20px',\r\n            marginLeft: '50px'\r\n        },\r\n    },\r\n    toDoEditButton: {\r\n        padding: '15px',\r\n        border: 'none',\r\n        borderRadius: '5px',\r\n        cursor: 'pointer',\r\n        outline: 'none',\r\n        background: 'linear-gradient(90deg, rgba(44, 130, 201, 1) 0%, rgba(0, 181, 204, 1) 100% )',\r\n        color: '#fff',\r\n        textTransform: 'uppercase',\r\n        fontWeight: '700',\r\n        marginLeft: '20px',\r\n        marginBottom: '5px',\r\n        fontFamily: 'Segoe UI',\r\n        [theme.breakpoints.down('xs')]: {\r\n            marginRight: '20px',\r\n            marginLeft: '40px',\r\n            marginTop: '20px',\r\n        },\r\n    },\r\n}));\r\n\r\nfunction TodoForm(props) {\r\n    const classes = useStyles();\r\n\r\n    const [input, setInput] = \r\n    useState(props.edit ? props.edit.value : '');\r\n\r\n   \r\n    const handleChange = e => {\r\n        setInput(e.target.value);\r\n    };\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        props.onSubmit({\r\n            id: Math.floor(Math.random() * 10000),\r\n            text: input\r\n        });\r\n\r\n        setInput('');\r\n    };\r\n\r\n    return (\r\n        \r\n        <form className={classes.toDoForm} onSubmit={handleSubmit}>\r\n            {props.edit ? (\r\n                <>\r\n                 <InputBase type=\"text\"\r\n                 placeholder=\"Update your list\" \r\n                 value={input}\r\n                 name=\"text\" className={classes.toDoInputEdit}\r\n                 onChange={handleChange}\r\n                 //autoFocus\r\n                 multiline\r\n                />\r\n                <Button className={classes.toDoEditButton} \r\n                variant=\"contained\"\r\n                type=\"submit\">\r\n                    Update \r\n                </Button>\r\n                </>\r\n            ) : \r\n            (\r\n                <>\r\n                <InputBase type=\"text\"\r\n                placeholder=\"Add a ToDo\" \r\n                value={input}\r\n                name=\"text\" className={classes.toDoInput}\r\n                onChange={handleChange}\r\n                autoFocus \r\n                multiline\r\n               />\r\n               <Button className={classes.toDoButton} \r\n               variant=\"contained\"\r\n               type=\"submit\">\r\n                   Add\r\n               </Button>\r\n               </>\r\n            )}\r\n\r\n        </form>\r\n      \r\n    )\r\n}\r\n\r\nexport default TodoForm;\r\n","import React, {useState} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TodoForm from './TodoForm';\r\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    todoWrap: {\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center',\r\n        margin: '20px auto',\r\n        color: '#fff',\r\n        background: 'linear-gradient( 90deg, rgba(255, 118, 20, 1) 0%,  rgba(255, 84, 17, 1) 100% )',\r\n        padding: '16px',\r\n        borderRadius: '5px',\r\n        width: '90%'\r\n    },\r\n    deleteIcon: {\r\n        cursor: 'pointer',\r\n        marginRight: '10px'\r\n    },\r\n    editIcon: {\r\n        cursor: 'pointer',\r\n    }\r\n}));\r\n\r\nfunction Todo ({ todos, completeTodo, removeTodo, updateTodo }) {\r\n    const classes = useStyles();\r\n\r\n    const [edit, setEdit] = useState({\r\n        id: null,\r\n        value: ''\r\n    });\r\n\r\n    const submitUpdate = value => {\r\n        updateTodo(edit.id, value);\r\n        setEdit({\r\n            id: null,\r\n            value: ''\r\n        })\r\n    }\r\n\r\n    if (edit.id) {\r\n        return <TodoForm edit={edit} onSubmit={submitUpdate} />\r\n    }\r\n\r\n    return todos.map((todo, index) => (\r\n        <div className={todo.isComplete ? 'todoRowComplete' : 'todoRow'}\r\n        key={index}\r\n        >\r\n            <div className={classes.todoWrap}>\r\n\r\n                <div key={todo.id} onClick={() => completeTodo(todo.id)}>\r\n                    {todo.text}\r\n                </div>\r\n\r\n                <div className={classes.icons}>\r\n                    <HighlightOffIcon\r\n                    onClick={() => removeTodo(todo.id)}\r\n                    className={classes.deleteIcon}\r\n                    />\r\n                    <EditIcon\r\n                    onClick={() => setEdit({id: todo.id, value: todo.text})}\r\n                    className={classes.editIcon}\r\n                    />\r\n                </div> \r\n\r\n            </div>\r\n\r\n        </div>\r\n    ));\r\n}\r\n\r\nexport default Todo;\r\n","import React,{useState}  from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TodoForm from '../components/TodoForm';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Todo from './Todo';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    typography: {\r\n        color: 'white',\r\n        marginBottom: '50px',\r\n        textAlign: 'center',\r\n        fontFamily: 'Segoe UI'\r\n    },\r\n    paper: {\r\n        padding: '50px',\r\n        borderRadius: '20px',\r\n        margin: '50px',\r\n        backgroundColor: 'white'\r\n    }\r\n}));\r\n\r\nfunction TodoList() {\r\n    const classes = useStyles();\r\n\r\n    const [todos, setTodos] = useState([]);\r\n\r\n    const addTodo = todo => {\r\n        if(!todo.text  || /^\\s*$/.test(todo.text)) {\r\n            return \r\n        }\r\n\r\n        const newTodos = [todo, ...todos];\r\n\r\n        setTodos(newTodos);\r\n    };\r\n\r\n    const updateTodo = (todoId, newValue) => {\r\n        if(!newValue.text  || /^\\s*$/.test(newValue.text)) {\r\n            return \r\n        }\r\n        setTodos(prev => prev.map(item => (item.id === todoId ? newValue : item )))\r\n    }\r\n\r\n    const removeTodo = id => {\r\n        const removeArr = [...todos].filter(todo => todo.id !== id)\r\n\r\n        setTodos(removeArr);\r\n    };\r\n\r\n    const completeTodo = id => {\r\n        let updatedTodos = todos.map(todo => {\r\n            if (todo.id === id) {\r\n                todo.isComplete = !todo.isComplete\r\n            }\r\n            return todo;\r\n        });\r\n        setTodos(updatedTodos);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n              <Typography variant=\"h4\" className={classes.typography}>\r\n                What's the plan for today ?\r\n            </Typography>\r\n            <Paper elevation={3} className={classes.paper}>\r\n                <TodoForm onSubmit={addTodo} />\r\n                <Todo \r\n                todos={todos}\r\n                completeTodo={completeTodo}\r\n                removeTodo={removeTodo}\r\n                updateTodo={updateTodo}\r\n                />\r\n            </Paper>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TodoList;\r\n","import React from \"react\";\r\nimport \"./assets/App.css\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TodoList from \"./components/TodoList\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  container: {\r\n    paddingTop: '180px',\r\n    display: 'flex',\r\n    justifyContent: 'center'\r\n  }\r\n}));\r\n\r\nfunction App() {\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Box className={classes.container}>\r\n      <TodoList/>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './assets/index.css';\r\nimport App from './App';\r\n\r\n\r\nReactDOM.render(\r\n <App />,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n"],"sourceRoot":""}